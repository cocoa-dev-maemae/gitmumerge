#!/bin/bash
set -e

destination_branch=$1
shift
candidate_branches=($@)

merge_into_candidate_from_destination() {
  candidate_branch=$1
  git checkout ${candidate_branch}
  set +e
  git merge --no-ff ${destination_branch}
  set -e
}

merge_into_destination_from_candidate() {
  candidate_branch=$1
  git checkout ${destination_branch}
  set +e
  git merge --no-ff ${candidate_branch}
  set -e
}

for candidate_branch in "${candidate_branches[@]}"; do
  while true; do
    dest=`echo -e "\e[1;31;40m${destination_branch}\e[00m"`
    cand=`echo -e "\e[1;31;40m${candidate_branch}\e[00m"`
    read -p "Do you merge into ${cand} from ${dest} [Y/n]" answer
    case $answer in
    '' | [Yy]* )
      merge_into_candidate_from_destination ${candidate_branch}
      break;
      ;;
    [Nn]* )
      set -e
      exit 1
      break;
      ;;
    * )
      echo Please answer YES or NO.
    esac
  done;

  while true; do
    dest=`echo -e "\e[1;31;40m${destination_branch}\e[00m"`
    cand=`echo -e "\e[1;31;40m${candidate_branch}\e[00m"`
    read -p "Do you merge into ${dest} from ${cand} [Y/n]" answer
    case $answer in
    '' | [Yy]* )
      merge_into_destination_from_candidate ${candidate_branch}
      break;
      ;;
    [Nn]* )
      set -e
      exit 1
      break;
      ;;
    * )
      echo Please answer Y or N
    esac
  done;
done

git checkout ${destination_branch}
echo -e "\e[1;31mMerging branches has done\e[00m"
# git push
# in the current version, it's not automatic
#while true; do
#  read -p "Do you push local ${destination_branch} to remote ${destination_branch} [Y/n]" answer
#  case $answer in
#  '' | [Yy]* )
#    git push origin ${destination_branch}
#    break;
#    ;;
#  [Nn]* )
#    echo exit
#    break;
#    ;;
#  * )
#    echo Please answer Y or N
#  esac
#done;
